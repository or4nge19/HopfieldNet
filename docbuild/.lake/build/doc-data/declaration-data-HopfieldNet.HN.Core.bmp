{"name":"HopfieldNet.HN.Core","instances":[{"typeNames":["NeuralNetwork.State"],"name":"instFintypeStateHopfieldNetwork","className":"Fintype"},{"typeNames":["State'"],"name":"StatePartialOrder","className":"PartialOrder"},{"typeNames":[],"name":"instDecidablePredState'Lt","className":"Decidable"},{"typeNames":["NeuralNetwork.State.isStable"],"name":"instDecidableIsStable","className":"Decidable"}],"imports":["Init","Mathlib.LinearAlgebra.Matrix.Symmetric","Mathlib.Data.Matrix.Reflection","Mathlib.Data.Vector.Defs","Init.Data.Vector.Lemmas","HopfieldNet.NN","HopfieldNet.HN.aux"],"declarations":[{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L895-L903","name":"Hebbian_stable","line":895,"kind":"theorem","docLink":"./HopfieldNet/HN/Core.html#Hebbian_stable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#Hebbian_stable\"><span class=\"name\">Hebbian_stable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hm</span> : <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ps</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">m</span></span> → <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">horth</span> : <span class=\"fn\">∀ {<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">m</span></span>}, <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">j</span> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ps</span> <span class=\"fn\">i</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <a href=\"./Mathlib/Data/Matrix/Mul.html#dotProduct\">⬝ᵥ</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ps</span> <span class=\"fn\">j</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.isStable\">NeuralNetwork.State.isStable</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#Hebbian\">Hebbian</a> <span class=\"fn\">ps</span>)</span> <span class=\"fn\">(<span class=\"fn\">ps</span> <span class=\"fn\">j</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L869-L893","name":"stateisStablecondition","line":869,"kind":"theorem","docLink":"./HopfieldNet/HN/Core.html#stateisStablecondition","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#stateisStablecondition\"><span class=\"name\">stateisStablecondition</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ps</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">m</span></span> → <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hw</span> : <span class=\"fn\">∀ (<span class=\"fn\">u</span> : <span class=\"fn\">U</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#Hebbian\">Hebbian</a> <span class=\"fn\">ps</span>)</span>.<a href=\"./HopfieldNet/NN.html#Params.w\">w</a></span>.<a href=\"./Mathlib/Data/Matrix/Mul.html#Matrix.mulVec\">mulVec</a></span> <span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.isStable\">NeuralNetwork.State.isStable</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#Hebbian\">Hebbian</a> <span class=\"fn\">ps</span>)</span> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L818-L867","name":"patterns_pairwise_orthogonal","line":818,"kind":"theorem","docLink":"./HopfieldNet/HN/Core.html#patterns_pairwise_orthogonal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#patterns_pairwise_orthogonal\"><span class=\"name\">patterns_pairwise_orthogonal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ps</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">m</span></span> → <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">horth</span> : <span class=\"fn\">∀ {<span class=\"fn\">i </span><span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">m</span></span>}, <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">j</span> → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ps</span> <span class=\"fn\">i</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <a href=\"./Mathlib/Data/Matrix/Mul.html#dotProduct\">⬝ᵥ</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ps</span> <span class=\"fn\">j</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">j</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#Hebbian\">Hebbian</a> <span class=\"fn\">ps</span>)</span>.<a href=\"./HopfieldNet/NN.html#Params.w\">w</a></span>.<a href=\"./Mathlib/Data/Matrix/Mul.html#Matrix.mulVec\">mulVec</a></span> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ps</span> <span class=\"fn\">j</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> (<span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">U</span>)</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span>) <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ps</span> <span class=\"fn\">j</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L813-L816","name":"HopfieldNet_cyclic_converg","line":813,"kind":"theorem","docLink":"./HopfieldNet/HN/Core.html#HopfieldNet_cyclic_converg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#HopfieldNet_cyclic_converg\"><span class=\"name\">HopfieldNet_cyclic_converg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#State'\">State'</a> <span class=\"fn\">wθ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">useq</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./HopfieldNet/HN/aux.html#cyclic\">cyclic</a> <span class=\"fn\">useq</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.isStable\">NeuralNetwork.State.isStable</a> <span class=\"fn\">wθ</span> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNet_stabilize_cyclic\">HopfieldNet_stabilize_cyclic</a> <span class=\"fn\">s</span> <span class=\"fn\">useq</span> <span class=\"fn\">hf</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L806-L811","name":"HopfieldNet_conv_time_steps","line":806,"kind":"def","docLink":"./HopfieldNet/HN/Core.html#HopfieldNet_conv_time_steps","doc":"`HopfieldNet_conv_time_steps` calculates the number of time steps required for a Hopfield Network to converge.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#HopfieldNet_conv_time_steps\"><span class=\"name\">HopfieldNet_conv_time_steps</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#State'\">State'</a> <span class=\"fn\">wθ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">useq</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./HopfieldNet/HN/aux.html#cyclic\">cyclic</a> <span class=\"fn\">useq</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L798-L804","name":"HopfieldNet_stabilize_cyclic","line":798,"kind":"def","docLink":"./HopfieldNet/HN/Core.html#HopfieldNet_stabilize_cyclic","doc":"`HopfieldNet_stabilize_cyclic` stabilizes a Hopfield network given an initial state `s`,\na sequence of updates `useq`, and a proof `hf` that the sequence is cyclic.\nIt returns the state of the network after convergence.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#HopfieldNet_stabilize_cyclic\"><span class=\"name\">HopfieldNet_stabilize_cyclic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#State'\">State'</a> <span class=\"fn\">wθ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">useq</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./HopfieldNet/HN/aux.html#cyclic\">cyclic</a> <span class=\"fn\">useq</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#State'\">State'</a> <span class=\"fn\">wθ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L790-L796","name":"HopfieldNet_convergence_cyclic","line":790,"kind":"theorem","docLink":"./HopfieldNet/HN/Core.html#HopfieldNet_convergence_cyclic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#HopfieldNet_convergence_cyclic\"><span class=\"name\">HopfieldNet_convergence_cyclic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#State'\">State'</a> <span class=\"fn\">wθ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">useq</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./HopfieldNet/HN/aux.html#cyclic\">cyclic</a> <span class=\"fn\">useq</span></span> →\n  <span class=\"fn\">∃ <span class=\"fn\">N</span> ≤ <span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">U</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">U</span></span>, <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.isStable\">NeuralNetwork.State.isStable</a> <span class=\"fn\">wθ</span> <span class=\"fn\">(<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.seqStates\">NeuralNetwork.State.seqStates</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s</span> <span class=\"fn\">useq</span> <span class=\"fn\">N</span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L783-L788","name":"NeuralNetwork.initial_state_bound","line":783,"kind":"theorem","docLink":"./HopfieldNet/HN/Core.html#NeuralNetwork.initial_state_bound","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#NeuralNetwork.initial_state_bound\"><span class=\"name\">NeuralNetwork</span>.<span class=\"name\">initial_state_bound</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#State'\">State'</a> <span class=\"fn\">wθ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">useq</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#num_of_states_less\">num_of_states_less</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#seqStates'\">seqStates'</a> <span class=\"fn\">s</span> <span class=\"fn\">useq</span> <span class=\"fn\">0</span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">U</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L773-L781","name":"num_of_states_card","line":773,"kind":"theorem","docLink":"./HopfieldNet/HN/Core.html#num_of_states_card","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#num_of_states_card\"><span class=\"name\">num_of_states_card</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">U</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L734-L771","name":"num_of_states_leq_c_implies_stable_sseq_cyclic","line":734,"kind":"theorem","docLink":"./HopfieldNet/HN/Core.html#num_of_states_leq_c_implies_stable_sseq_cyclic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#num_of_states_leq_c_implies_stable_sseq_cyclic\"><span class=\"name\">num_of_states_leq_c_implies_stable_sseq_cyclic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#State'\">State'</a> <span class=\"fn\">wθ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">useq</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hcy</span> : <span class=\"fn\"><a href=\"./HopfieldNet/HN/aux.html#cyclic\">cyclic</a> <span class=\"fn\">useq</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#num_of_states_less\">num_of_states_less</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#seqStates'\">seqStates'</a> <span class=\"fn\">s</span> <span class=\"fn\">useq</span> <span class=\"fn\">n</span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span> →\n  <span class=\"fn\">∃ <span class=\"fn\">m</span> ≥ <span class=\"fn\">n</span>, <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">U</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.isStable\">NeuralNetwork.State.isStable</a> <span class=\"fn\">wθ</span> <span class=\"fn\">(<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.seqStates\">NeuralNetwork.State.seqStates</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s</span> <span class=\"fn\">useq</span> <span class=\"fn\">m</span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L711-L732","name":"not_stable_implies_sseqm_lt_sseqn_cyclic","line":711,"kind":"theorem","docLink":"./HopfieldNet/HN/Core.html#not_stable_implies_sseqm_lt_sseqn_cyclic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#not_stable_implies_sseqm_lt_sseqn_cyclic\"><span class=\"name\">not_stable_implies_sseqm_lt_sseqn_cyclic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#State'\">State'</a> <span class=\"fn\">wθ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">useq</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./HopfieldNet/HN/aux.html#cyclic\">cyclic</a> <span class=\"fn\">useq</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hstable</span> : <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.isStable\">NeuralNetwork.State.isStable</a> <span class=\"fn\">wθ</span> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#seqStates'\">seqStates'</a> <span class=\"fn\">s</span> <span class=\"fn\">useq</span> <span class=\"fn\">n</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ <span class=\"fn\">m</span> ≥ <span class=\"fn\">n</span>, <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">U</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#seqStates'\">seqStates'</a> <span class=\"fn\">s</span> <span class=\"fn\">useq</span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#seqStates'\">seqStates'</a> <span class=\"fn\">s</span> <span class=\"fn\">useq</span> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L706-L709","name":"isStable_HN_stabilize","line":706,"kind":"theorem","docLink":"./HopfieldNet/HN/Core.html#isStable_HN_stabilize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#isStable_HN_stabilize\"><span class=\"name\">isStable_HN_stabilize</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#State'\">State'</a> <span class=\"fn\">wθ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">useq</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./HopfieldNet/HN/aux.html#fair\">fair</a> <span class=\"fn\">useq</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.isStable\">NeuralNetwork.State.isStable</a> <span class=\"fn\">wθ</span> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNet_stabilize\">HopfieldNet_stabilize</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s</span> <span class=\"fn\">useq</span> <span class=\"fn\">hf</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L699-L704","name":"HopfieldNet_stabilize","line":699,"kind":"def","docLink":"./HopfieldNet/HN/Core.html#HopfieldNet_stabilize","doc":"A function that returns the stabilized state after updating.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#HopfieldNet_stabilize\"><span class=\"name\">HopfieldNet_stabilize</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#State'\">State'</a> <span class=\"fn\">wθ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">useq</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./HopfieldNet/HN/aux.html#fair\">fair</a> <span class=\"fn\">useq</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#State'\">State'</a> <span class=\"fn\">wθ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L697-L697","name":"instDecidableIsStable","line":697,"kind":"instance","docLink":"./HopfieldNet/HN/Core.html#instDecidableIsStable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#instDecidableIsStable\"><span class=\"name\">instDecidableIsStable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#State'\">State'</a> <span class=\"fn\">wθ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">(<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.isStable\">NeuralNetwork.State.isStable</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L690-L695","name":"HopfieldNet_convergence_fair","line":690,"kind":"theorem","docLink":"./HopfieldNet/HN/Core.html#HopfieldNet_convergence_fair","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#HopfieldNet_convergence_fair\"><span class=\"name\">HopfieldNet_convergence_fair</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#State'\">State'</a> <span class=\"fn\">wθ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">useq</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./HopfieldNet/HN/aux.html#fair\">fair</a> <span class=\"fn\">useq</span></span> → <span class=\"fn\">∃ (<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.isStable\">NeuralNetwork.State.isStable</a> <span class=\"fn\">wθ</span> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#seqStates'\">seqStates'</a> <span class=\"fn\">s</span> <span class=\"fn\">useq</span> <span class=\"fn\">N</span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L664-L688","name":"num_of_states_leq_c_implies_stable_sseq","line":664,"kind":"theorem","docLink":"./HopfieldNet/HN/Core.html#num_of_states_leq_c_implies_stable_sseq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#num_of_states_leq_c_implies_stable_sseq\"><span class=\"name\">num_of_states_leq_c_implies_stable_sseq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">useq</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./HopfieldNet/HN/aux.html#fair\">fair</a> <span class=\"fn\">useq</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">c </span><span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#num_of_states_less\">num_of_states_less</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#seqStates'\">seqStates'</a> <span class=\"fn\">s</span> <span class=\"fn\">useq</span> <span class=\"fn\">n</span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span> → <span class=\"fn\">∃ <span class=\"fn\">m</span> ≥ <span class=\"fn\">n</span>, <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.isStable\">NeuralNetwork.State.isStable</a> <span class=\"fn\">wθ</span> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#seqStates'\">seqStates'</a> <span class=\"fn\">s</span> <span class=\"fn\">useq</span> <span class=\"fn\">m</span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L648-L662","name":"not_stable_implies_sseqm_lt_sseqn","line":648,"kind":"theorem","docLink":"./HopfieldNet/HN/Core.html#not_stable_implies_sseqm_lt_sseqn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#not_stable_implies_sseqm_lt_sseqn\"><span class=\"name\">not_stable_implies_sseqm_lt_sseqn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#State'\">State'</a> <span class=\"fn\">wθ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">useq</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hf</span> : <span class=\"fn\"><a href=\"./HopfieldNet/HN/aux.html#fair\">fair</a> <span class=\"fn\">useq</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hstable</span> : <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.isStable\">NeuralNetwork.State.isStable</a> <span class=\"fn\">wθ</span> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#seqStates'\">seqStates'</a> <span class=\"fn\">s</span> <span class=\"fn\">useq</span> <span class=\"fn\">n</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ <span class=\"fn\">m</span> ≥ <span class=\"fn\">n</span>, <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#seqStates'\">seqStates'</a> <span class=\"fn\">s</span> <span class=\"fn\">useq</span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#seqStates'\">seqStates'</a> <span class=\"fn\">s</span> <span class=\"fn\">useq</span> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L640-L646","name":"seqStates_le'","line":640,"kind":"theorem","docLink":"./HopfieldNet/HN/Core.html#seqStates_le'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#seqStates_le'\"><span class=\"name\">seqStates_le'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#State'\">State'</a> <span class=\"fn\">wθ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">useq</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">m'</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hm'</span> : <span class=\"fn\">m'</span> <a href=\"./Init/Prelude.html#GE.ge\">≥</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#seqStates'\">seqStates'</a> <span class=\"fn\">s</span> <span class=\"fn\">useq</span> <span class=\"fn\">m'</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#seqStates'\">seqStates'</a> <span class=\"fn\">s</span> <span class=\"fn\">useq</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L629-L638","name":"num_of_states_leq_zero_implies_stable","line":629,"kind":"theorem","docLink":"./HopfieldNet/HN/Core.html#num_of_states_leq_zero_implies_stable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#num_of_states_leq_zero_implies_stable\"><span class=\"name\">num_of_states_leq_zero_implies_stable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#State'\">State'</a> <span class=\"fn\">wθ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#num_of_states_less\">num_of_states_less</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.isStable\">NeuralNetwork.State.isStable</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L617-L627","name":"num_of_states_decreases","line":617,"kind":"theorem","docLink":"./HopfieldNet/HN/Core.html#num_of_states_decreases","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#num_of_states_decreases\"><span class=\"name\">num_of_states_decreases</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s </span><span class=\"fn\">s'</span> : <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#State'\">State'</a> <span class=\"fn\">wθ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hs</span> : <span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">s'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#num_of_states_less\">num_of_states_less</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#num_of_states_less\">num_of_states_less</a> <span class=\"fn\">s'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L612-L615","name":"num_of_states_less","line":612,"kind":"def","docLink":"./HopfieldNet/HN/Core.html#num_of_states_less","doc":"`num_of_states_less` returns the number of states that come before a given state `s`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#num_of_states_less\"><span class=\"name\">num_of_states_less</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#State'\">State'</a> <span class=\"fn\">wθ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L605-L608","name":"states_less","line":605,"kind":"def","docLink":"./HopfieldNet/HN/Core.html#states_less","doc":"`states_less` is the set of patterns in a Hopfield Network that are less than a given state `s`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#states_less\"><span class=\"name\">states_less</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#State'\">State'</a> <span class=\"fn\">wθ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L602-L603","name":"instDecidablePredState'Lt","line":602,"kind":"instance","docLink":"./HopfieldNet/HN/Core.html#instDecidablePredState'Lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#instDecidablePredState'Lt\"><span class=\"name\">instDecidablePredState'Lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#State'\">State'</a> <span class=\"fn\">wθ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidablePred\">DecidablePred</a> <span class=\"fn\">fun (<span class=\"fn\">s'</span> : <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#State'\">State'</a> <span class=\"fn\">wθ</span></span>) =&gt; <span class=\"fn\">s'</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L593-L598","name":"seqStates_lt","line":593,"kind":"theorem","docLink":"./HopfieldNet/HN/Core.html#seqStates_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#seqStates_lt\"><span class=\"name\">seqStates_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#State'\">State'</a> <span class=\"fn\">wθ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">useq</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">m'</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hm'</span> : <span class=\"fn\">m'</span> <a href=\"./Init/Prelude.html#GT.gt\">&gt;</a> <span class=\"fn\">n</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#seqStates'\">seqStates'</a> <span class=\"fn\">s</span> <span class=\"fn\">useq</span> <span class=\"fn\">m'</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#seqStates'\">seqStates'</a> <span class=\"fn\">s</span> <span class=\"fn\">useq</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L587-L591","name":"not_stable_u","line":587,"kind":"theorem","docLink":"./HopfieldNet/HN/Core.html#not_stable_u","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#not_stable_u\"><span class=\"name\">not_stable_u</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.isStable\">NeuralNetwork.State.isStable</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s</span></span> → <span class=\"fn\">∃ (<span class=\"fn\">u</span> : <span class=\"fn\">U</span>), <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.Up\">NeuralNetwork.State.Up</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s</span> <span class=\"fn\">u</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L580-L585","name":"NeuralNetwork.n_leq_n'_imp_sseq_n'_leq_sseq''","line":580,"kind":"theorem","docLink":"./HopfieldNet/HN/Core.html#NeuralNetwork.n_leq_n'_imp_sseq_n'_leq_sseq''","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#NeuralNetwork.n_leq_n'_imp_sseq_n'_leq_sseq''\"><span class=\"name\">NeuralNetwork</span>.<span class=\"name\">n_leq_n'_imp_sseq_n'_leq_sseq''</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">useq</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">U</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#State'\">State'</a> <span class=\"fn\">wθ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#seqStates'\">seqStates'</a> <span class=\"fn\">s</span> <span class=\"fn\">useq</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span>)</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#seqStates'\">seqStates'</a> <span class=\"fn\">s</span> <span class=\"fn\">useq</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L575-L578","name":"n_leq_n'_imp_sseq_n_k","line":575,"kind":"theorem","docLink":"./HopfieldNet/HN/Core.html#n_leq_n'_imp_sseq_n_k","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#n_leq_n'_imp_sseq_n_k\"><span class=\"name\">n_leq_n'_imp_sseq_n_k</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">useq</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">U</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n </span><span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.seqStates\">NeuralNetwork.State.seqStates</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s</span> <span class=\"fn\">useq</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.Up\">NeuralNetwork.State.Up</a> <span class=\"fn\">wθ</span> <span class=\"fn\">(<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.seqStates\">NeuralNetwork.State.seqStates</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s</span> <span class=\"fn\">useq</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span>))</span> <span class=\"fn\">(<span class=\"fn\">useq</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span>))</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L571-L573","name":"n_leq_n'_imp_sseq_n_k''","line":571,"kind":"theorem","docLink":"./HopfieldNet/HN/Core.html#n_leq_n'_imp_sseq_n_k''","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#n_leq_n'_imp_sseq_n_k''\"><span class=\"name\">n_leq_n'_imp_sseq_n_k''</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">useq</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">U</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.seqStates\">NeuralNetwork.State.seqStates</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s</span> <span class=\"fn\">useq</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.Up\">NeuralNetwork.State.Up</a> <span class=\"fn\">wθ</span> <span class=\"fn\">(<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.seqStates\">NeuralNetwork.State.seqStates</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s</span> <span class=\"fn\">useq</span> <span class=\"fn\">n</span>)</span> <span class=\"fn\">(<span class=\"fn\">useq</span> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L566-L569","name":"n_leq_n'_imp_sseq_n","line":566,"kind":"theorem","docLink":"./HopfieldNet/HN/Core.html#n_leq_n'_imp_sseq_n","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#n_leq_n'_imp_sseq_n\"><span class=\"name\">n_leq_n'_imp_sseq_n</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">useq</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">U</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.seqStates\">NeuralNetwork.State.seqStates</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s</span> <span class=\"fn\">useq</span> (<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.Up\">NeuralNetwork.State.Up</a> <span class=\"fn\">wθ</span> <span class=\"fn\">(<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.seqStates\">NeuralNetwork.State.seqStates</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s</span> <span class=\"fn\">useq</span> <span class=\"fn\">n</span>)</span> <span class=\"fn\">(<span class=\"fn\">useq</span> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L561-L564","name":"update_le","line":561,"kind":"theorem","docLink":"./HopfieldNet/HN/Core.html#update_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#update_le\"><span class=\"name\">update_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\">U</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#State'\">State'</a> <span class=\"fn\">wθ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#Up'\">Up'</a> <span class=\"fn\">s</span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">s</span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L552-L559","name":"update_less'","line":552,"kind":"theorem","docLink":"./HopfieldNet/HN/Core.html#update_less'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#update_less'\"><span class=\"name\">update_less'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\">U</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#State'\">State'</a> <span class=\"fn\">wθ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#Up'\">Up'</a> <span class=\"fn\">s</span> <span class=\"fn\">u</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">s</span> → <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#Up'\">Up'</a> <span class=\"fn\">s</span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L548-L550","name":"up_act_eq_iff_eq","line":548,"kind":"theorem","docLink":"./HopfieldNet/HN/Core.html#up_act_eq_iff_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#up_act_eq_iff_eq\"><span class=\"name\">up_act_eq_iff_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\">U</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#State'\">State'</a> <span class=\"fn\">wθ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#Up'\">Up'</a> <span class=\"fn\">s</span> <span class=\"fn\">u</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#Up'\">Up'</a> <span class=\"fn\">s</span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">s</span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L544-L546","name":"up_act_eq_act_of_up_eq","line":544,"kind":"theorem","docLink":"./HopfieldNet/HN/Core.html#up_act_eq_act_of_up_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#up_act_eq_act_of_up_eq\"><span class=\"name\">up_act_eq_act_of_up_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\">U</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#State'\">State'</a> <span class=\"fn\">wθ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#Up'\">Up'</a> <span class=\"fn\">s</span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">s</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#Up'\">Up'</a> <span class=\"fn\">s</span> <span class=\"fn\">u</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L539-L542","name":"state_Up_act","line":539,"kind":"theorem","docLink":"./HopfieldNet/HN/Core.html#state_Up_act","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#state_Up_act\"><span class=\"name\">state_Up_act</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\">U</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#State'\">State'</a> <span class=\"fn\">wθ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#Up'\">Up'</a> <span class=\"fn\">s</span> <span class=\"fn\">u</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span> → <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#Up'\">Up'</a> <span class=\"fn\">s</span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L534-L537","name":"state_act_eq","line":534,"kind":"theorem","docLink":"./HopfieldNet/HN/Core.html#state_act_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#state_act_eq\"><span class=\"name\">state_act_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s1 </span><span class=\"fn\">s2</span> : <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#State'\">State'</a> <span class=\"fn\">wθ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s1</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">s2</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> → <span class=\"fn\">s1</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">s2</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L516-L532","name":"stateLt_lt","line":516,"kind":"theorem","docLink":"./HopfieldNet/HN/Core.html#stateLt_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#stateLt_lt\"><span class=\"name\">stateLt_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s1 </span><span class=\"fn\">s2</span> : <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#State'\">State'</a> <span class=\"fn\">wθ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">s1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">s2</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#stateLt\">stateLt</a> <span class=\"fn\">s1</span> <span class=\"fn\">s2</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L494-L514","name":"StatePartialOrder","line":494,"kind":"instance","docLink":"./HopfieldNet/HN/Core.html#StatePartialOrder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#StatePartialOrder\"><span class=\"name\">StatePartialOrder</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Defs/PartialOrder.html#PartialOrder\">PartialOrder</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#State'\">State'</a> <span class=\"fn\">wθ</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L488-L492","name":"stateOrd","line":488,"kind":"def","docLink":"./HopfieldNet/HN/Core.html#stateOrd","doc":"Defines a partial order on states. The relation `stateOrd` holds between two states `s1` and `s2`\nif `s1` is equal to `s2` or if `s1` is before `s2` according to `stateLt`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#stateOrd\"><span class=\"name\">stateOrd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s1 </span><span class=\"fn\">s2</span> : <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#State'\">State'</a> <span class=\"fn\">wθ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L480-L486","name":"stateLt_antisym","line":480,"kind":"theorem","docLink":"./HopfieldNet/HN/Core.html#stateLt_antisym","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#stateLt_antisym\"><span class=\"name\">stateLt_antisym</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s1 </span><span class=\"fn\">s2</span> : <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#State'\">State'</a> <span class=\"fn\">wθ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#stateLt\">stateLt</a> <span class=\"fn\">s1</span> <span class=\"fn\">s2</span></span> → <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#stateLt\">stateLt</a> <span class=\"fn\">s2</span> <span class=\"fn\">s1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L471-L478","name":"stateLt","line":471,"kind":"def","docLink":"./HopfieldNet/HN/Core.html#stateLt","doc":"Defines a ordering between two states `s1` and `s2` based on their energy `E`\nand the number of pluses.\nA state `s1` is before `s2` if:\n- `s1` has lower energy than `s2`, or\n- `s1` has the same energy as `s2`, but more pluses.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#stateLt\"><span class=\"name\">stateLt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s1 </span><span class=\"fn\">s2</span> : <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#State'\">State'</a> <span class=\"fn\">wθ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L460-L469","name":"seqStates'","line":460,"kind":"def","docLink":"./HopfieldNet/HN/Core.html#seqStates'","doc":"Generates a sequence of states for a Hopfield Network.\n\nParameters:\n- `s`: A state.\n- `useq`: A sequence of states.\n\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#seqStates'\"><span class=\"name\">seqStates'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#State'\">State'</a> <span class=\"fn\">wθ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">useq</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">U</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#State'\">State'</a> <span class=\"fn\">wθ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L455-L458","name":"Up'","line":455,"kind":"def","docLink":"./HopfieldNet/HN/Core.html#Up'","doc":"`Up'` updates the state `s` at neuron `u`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#Up'\"><span class=\"name\">Up'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#State'\">State'</a> <span class=\"fn\">wθ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <span class=\"fn\">U</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#State'\">State'</a> <span class=\"fn\">wθ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L448-L451","name":"State'","line":448,"kind":"def","docLink":"./HopfieldNet/HN/Core.html#State'","doc":"`State'` is a type alias for the state of a `HopfieldNetwork` with given parameters.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#State'\"><span class=\"name\">State'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span> → <a href=\"./foundational_types.html\">Type</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L446-L446","name":"instFintypeStateHopfieldNetwork","line":446,"kind":"instance","docLink":"./HopfieldNet/HN/Core.html#instFintypeStateHopfieldNetwork","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#instFintypeStateHopfieldNetwork\"><span class=\"name\">instFintypeStateHopfieldNetwork</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L431-L444","name":"NeuralNetwork.stateToNeurActMap_equiv'","line":431,"kind":"def","docLink":"./HopfieldNet/HN/Core.html#NeuralNetwork.stateToNeurActMap_equiv'","doc":"`NeuralNetwork.stateToNeurActMap_equiv'` provides an equivalence between the `State` type\nof a `HopfieldNetwork` and a function type `U → ({1, -1} : Finset R)`.\nThis equivalence allows for easier manipulation of neural network states.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#NeuralNetwork.stateToNeurActMap_equiv'\"><span class=\"name\">NeuralNetwork</span>.<span class=\"name\">stateToNeurActMap_equiv'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">(<span class=\"fn\">U</span> → <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">R</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <a href=\"./Init/Core.html#Insert.insert\">{</a><span class=\"fn\">1</span><a href=\"./Init/Core.html#Insert.insert\">,</a> <span class=\"fn\">-<span class=\"fn\">1</span></span><a href=\"./Init/Core.html#Insert.insert\">}</a> <a href=\"./Init/Prelude.html#Subtype\">}</a>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L424-L429","name":"stateToNeurActMap","line":424,"kind":"def","docLink":"./HopfieldNet/HN/Core.html#stateToNeurActMap","doc":"`stateToNeurActMap` maps a Hopfield Network state to a function that returns\nthe activation state (1 or -1) of a given neuron.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#stateToNeurActMap\"><span class=\"name\">stateToNeurActMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span> → <span class=\"fn\"><span class=\"fn\">U</span> → <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">R</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <a href=\"./Init/Core.html#Insert.insert\">{</a><span class=\"fn\">1</span><a href=\"./Init/Core.html#Insert.insert\">,</a> <span class=\"fn\">-<span class=\"fn\">1</span></span><a href=\"./Init/Core.html#Insert.insert\">}</a> <a href=\"./Init/Prelude.html#Subtype\">}</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L419-L422","name":"neuronToActMap","line":419,"kind":"def","docLink":"./HopfieldNet/HN/Core.html#neuronToActMap","doc":"`neuronToActMap` maps a neuron `u` to its activation value in the set `{-1, 1}`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#neuronToActMap\"><span class=\"name\">neuronToActMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">U</span> → <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">R</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <a href=\"./Init/Core.html#Insert.insert\">{</a><span class=\"fn\">-<span class=\"fn\">1</span></span><a href=\"./Init/Core.html#Insert.insert\">,</a> <span class=\"fn\">1</span><a href=\"./Init/Core.html#Insert.insert\">}</a> <a href=\"./Init/Prelude.html#Subtype\">}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L413-L417","name":"stateToActValMap","line":413,"kind":"def","docLink":"./HopfieldNet/HN/Core.html#stateToActValMap","doc":"`stateToActValMap` maps a state from a `HopfieldNetwork` to the set `{-1, 1}`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#stateToActValMap\"><span class=\"name\">stateToActValMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span> → <a href=\"./Init/Prelude.html#Subtype\">{</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Subtype\">:</a> <span class=\"fn\">R</span> <a href=\"./Init/Prelude.html#Subtype\">//</a> <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <a href=\"./Init/Core.html#Insert.insert\">{</a><span class=\"fn\">-<span class=\"fn\">1</span></span><a href=\"./Init/Core.html#Insert.insert\">,</a> <span class=\"fn\">1</span><a href=\"./Init/Core.html#Insert.insert\">}</a> <a href=\"./Init/Prelude.html#Subtype\">}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L387-L409","name":"energy_lt_zero_or_pluses_increase","line":387,"kind":"theorem","docLink":"./HopfieldNet/HN/Core.html#energy_lt_zero_or_pluses_increase","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#energy_lt_zero_or_pluses_increase\"><span class=\"name\">energy_lt_zero_or_pluses_increase</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\">U</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.Up\">NeuralNetwork.State.Up</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s</span> <span class=\"fn\">u</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#NeuralNetwork.State.E\">NeuralNetwork.State.E</a> <span class=\"fn\">wθ</span> <span class=\"fn\">(<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.Up\">NeuralNetwork.State.Up</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s</span> <span class=\"fn\">u</span>)</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#NeuralNetwork.State.E\">NeuralNetwork.State.E</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a>   <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#NeuralNetwork.State.E\">NeuralNetwork.State.E</a> <span class=\"fn\">wθ</span> <span class=\"fn\">(<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.Up\">NeuralNetwork.State.Up</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s</span> <span class=\"fn\">u</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#NeuralNetwork.State.E\">NeuralNetwork.State.E</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#And\">∧</a>     <a href=\"./HopfieldNet/HN/Core.html#NeuralNetwork.State.pluses\">NeuralNetwork.State.pluses</a> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <a href=\"./HopfieldNet/HN/Core.html#NeuralNetwork.State.pluses\">NeuralNetwork.State.pluses</a></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L382-L385","name":"NeuralNetwork.State.pluses","line":382,"kind":"def","docLink":"./HopfieldNet/HN/Core.html#NeuralNetwork.State.pluses","doc":"`NeuralNetwork.State.pluses` counts the number of neurons in the state `s` with activation `1`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#NeuralNetwork.State.pluses\"><span class=\"name\">NeuralNetwork</span>.<span class=\"name\">State</span>.<span class=\"name\">pluses</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L367-L380","name":"energy_diff_leq_zero","line":367,"kind":"theorem","docLink":"./HopfieldNet/HN/Core.html#energy_diff_leq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#energy_diff_leq_zero\"><span class=\"name\">energy_diff_leq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\">U</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.Up\">NeuralNetwork.State.Up</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s</span> <span class=\"fn\">u</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#NeuralNetwork.State.E\">NeuralNetwork.State.E</a> <span class=\"fn\">wθ</span> <span class=\"fn\">(<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.Up\">NeuralNetwork.State.Up</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s</span> <span class=\"fn\">u</span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#NeuralNetwork.State.E\">NeuralNetwork.State.E</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L325-L365","name":"E_final_Form","line":325,"kind":"theorem","docLink":"./HopfieldNet/HN/Core.html#E_final_Form","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#E_final_Form\"><span class=\"name\">E_final_Form</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\">U</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#NeuralNetwork.State.E\">NeuralNetwork.State.E</a> <span class=\"fn\">wθ</span> <span class=\"fn\">(<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.Up\">NeuralNetwork.State.Up</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s</span> <span class=\"fn\">u</span>)</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#NeuralNetwork.State.E\">NeuralNetwork.State.E</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.Up\">NeuralNetwork.State.Up</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s</span> <span class=\"fn\">u</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span>) <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\">∑ <span class=\"fn\">v2</span> : <span class=\"fn\">U </span>with <span class=\"fn\">v2</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">u</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">wθ</span>.<a href=\"./HopfieldNet/NN.html#Params.w\">w</a></span> <span class=\"fn\">u</span> <span class=\"fn\">v2</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v2</span></span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#θ'\">θ'</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">wθ</span>.<a href=\"./HopfieldNet/NN.html#Params.θ\">θ</a></span> <span class=\"fn\">u</span>)</span></span>)</div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L310-L323","name":"Eθ_diff","line":310,"kind":"theorem","docLink":"./HopfieldNet/HN/Core.html#Eθ_diff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#Eθ_diff\"><span class=\"name\">Eθ_diff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\">U</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#NeuralNetwork.State.Eθ\">NeuralNetwork.State.Eθ</a> <span class=\"fn\">wθ</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#NeuralNetwork.State.Eθ\">NeuralNetwork.State.Eθ</a> <span class=\"fn\">wθ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#θ'\">θ'</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">wθ</span>.<a href=\"./HopfieldNet/NN.html#Params.θ\">θ</a></span> <span class=\"fn\">u</span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.Up\">NeuralNetwork.State.Up</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s</span> <span class=\"fn\">u</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span>)</div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L304-L308","name":"θ_formula","line":304,"kind":"theorem","docLink":"./HopfieldNet/HN/Core.html#θ_formula","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#θ_formula\"><span class=\"name\">θ_formula</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\">U</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∑ <span class=\"fn\">v2</span> : <span class=\"fn\">U</span>, <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#θ'\">θ'</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">wθ</span>.<a href=\"./HopfieldNet/NN.html#Params.θ\">θ</a></span> <span class=\"fn\">v2</span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v2</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#θ'\">θ'</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">wθ</span>.<a href=\"./HopfieldNet/NN.html#Params.θ\">θ</a></span> <span class=\"fn\">u</span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">∑ <span class=\"fn\">v2</span> : <span class=\"fn\">U </span>with <span class=\"fn\">v2</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">u</span>, <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#θ'\">θ'</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">wθ</span>.<a href=\"./HopfieldNet/NN.html#Params.θ\">θ</a></span> <span class=\"fn\">v2</span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L298-L302","name":"θ_stable","line":298,"kind":"theorem","docLink":"./HopfieldNet/HN/Core.html#θ_stable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#θ_stable\"><span class=\"name\">θ_stable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\">U</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∑ <span class=\"fn\">v2</span> : <span class=\"fn\">U </span>with <span class=\"fn\">v2</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">u</span>, <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#θ'\">θ'</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">wθ</span>.<a href=\"./HopfieldNet/NN.html#Params.θ\">θ</a></span> <span class=\"fn\">v2</span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v2</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">∑ <span class=\"fn\">v2</span> : <span class=\"fn\">U </span>with <span class=\"fn\">v2</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">u</span>, <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#θ'\">θ'</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">wθ</span>.<a href=\"./HopfieldNet/NN.html#Params.θ\">θ</a></span> <span class=\"fn\">v2</span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.Up\">NeuralNetwork.State.Up</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s</span> <span class=\"fn\">u</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L275-L296","name":"Ew_diff'","line":275,"kind":"theorem","docLink":"./HopfieldNet/HN/Core.html#Ew_diff'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#Ew_diff'\"><span class=\"name\">Ew_diff'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\">U</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#NeuralNetwork.State.Ew\">NeuralNetwork.State.Ew</a> <span class=\"fn\">wθ</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#NeuralNetwork.State.Ew\">NeuralNetwork.State.Ew</a> <span class=\"fn\">wθ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">∑ <span class=\"fn\">v2</span> : <span class=\"fn\">U </span>with <span class=\"fn\">v2</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">u</span>, <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#NeuralNetwork.State.Wact\">NeuralNetwork.State.Wact</a> <span class=\"fn\">wθ</span> <span class=\"fn\">v2</span> <span class=\"fn\">u</span></span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">∑ <span class=\"fn\">v2</span> : <span class=\"fn\">U </span>with <span class=\"fn\">v2</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">u</span>, <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#NeuralNetwork.State.Wact\">NeuralNetwork.State.Wact</a> <span class=\"fn\">wθ</span> <span class=\"fn\">v2</span> <span class=\"fn\">u</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L221-L273","name":"Ew_update_formula_split","line":221,"kind":"theorem","docLink":"./HopfieldNet/HN/Core.html#Ew_update_formula_split","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#Ew_update_formula_split\"><span class=\"name\">Ew_update_formula_split</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\">U</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#NeuralNetwork.State.Ew\">NeuralNetwork.State.Ew</a> <span class=\"fn\">wθ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">∑ <span class=\"fn\">v2</span> : <span class=\"fn\">U </span>with <span class=\"fn\">v2</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">u</span>, <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#NeuralNetwork.State.Wact\">NeuralNetwork.State.Wact</a> <span class=\"fn\">wθ</span> <span class=\"fn\">v2</span> <span class=\"fn\">u</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a>     <span class=\"fn\"><span class=\"fn\">-<span class=\"fn\">1</span></span> / <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">∑ <span class=\"fn\">v1</span> : <span class=\"fn\">U</span>, <span class=\"fn\">∑ <span class=\"fn\">v2</span> : <span class=\"fn\">U </span>with (<span class=\"fn\">v2</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">v1</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">v1</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">u</span>) <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">v2</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">u</span>, <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#NeuralNetwork.State.Wact\">NeuralNetwork.State.Wact</a> <span class=\"fn\">wθ</span> <span class=\"fn\">v1</span> <span class=\"fn\">v2</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L214-L219","name":"Wact_sym","line":214,"kind":"theorem","docLink":"./HopfieldNet/HN/Core.html#Wact_sym","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#Wact_sym\"><span class=\"name\">Wact_sym</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">v1 </span><span class=\"fn\">v2</span> : <span class=\"fn\">U</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#NeuralNetwork.State.Wact\">NeuralNetwork.State.Wact</a> <span class=\"fn\">wθ</span> <span class=\"fn\">v1</span> <span class=\"fn\">v2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#NeuralNetwork.State.Wact\">NeuralNetwork.State.Wact</a> <span class=\"fn\">wθ</span> <span class=\"fn\">v2</span> <span class=\"fn\">v1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L202-L212","name":"NeuralNetwork.State.E","line":202,"kind":"def","docLink":"./HopfieldNet/HN/Core.html#NeuralNetwork.State.E","doc":"Calculates the energy `E` of a state `s` in a Hopfield Network.\n\nThe energy is the sum of:\n- `Ew` : Weighted energy component.\n- `Eθ` : Threshold energy component.\n\nArguments:\n- `s`: A state in the Hopfield Network.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#NeuralNetwork.State.E\"><span class=\"name\">NeuralNetwork</span>.<span class=\"name\">State</span>.<span class=\"name\">E</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">R</span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L196-L200","name":"NeuralNetwork.State.Ew","line":196,"kind":"def","docLink":"./HopfieldNet/HN/Core.html#NeuralNetwork.State.Ew","doc":"`NeuralNetwork.State.Ew` computes the energy contribution from the weights in a state.\nIt is defined as `-1/2` times the sum of `s.Wact wθ u v2` for all `u` and `v2` where `v2 ≠ u`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#NeuralNetwork.State.Ew\"><span class=\"name\">NeuralNetwork</span>.<span class=\"name\">State</span>.<span class=\"name\">Ew</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">R</span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L191-L194","name":"NeuralNetwork.State.Eθ","line":191,"kind":"def","docLink":"./HopfieldNet/HN/Core.html#NeuralNetwork.State.Eθ","doc":"`NeuralNetwork.State.Eθ` computes the sum of `θ' (wθ.θ u) * s.act u` for all `u`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#NeuralNetwork.State.Eθ\"><span class=\"name\">NeuralNetwork</span>.<span class=\"name\">State</span>.<span class=\"name\">Eθ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">R</span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L185-L189","name":"NeuralNetwork.State.Wact","line":185,"kind":"def","docLink":"./HopfieldNet/HN/Core.html#NeuralNetwork.State.Wact","doc":"`NeuralNetwork.State.Wact` computes the weighted activation for neurons `u` and `v`\nby multiplying the weight `wθ.w u v` with their activations `s.act u` and `s.act v`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#NeuralNetwork.State.Wact\"><span class=\"name\">NeuralNetwork</span>.<span class=\"name\">State</span>.<span class=\"name\">Wact</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u </span><span class=\"fn\">v</span> : <span class=\"fn\">U</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">R</span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L180-L183","name":"act_eq_neg_one_if_up_act_eq_one_and_net_eq_th","line":180,"kind":"theorem","docLink":"./HopfieldNet/HN/Core.html#act_eq_neg_one_if_up_act_eq_one_and_net_eq_th","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#act_eq_neg_one_if_up_act_eq_one_and_net_eq_th\"><span class=\"name\">act_eq_neg_one_if_up_act_eq_one_and_net_eq_th</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\">U</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.Up\">NeuralNetwork.State.Up</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s</span> <span class=\"fn\">u</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h2</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.net\">NeuralNetwork.State.net</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s</span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#θ'\">θ'</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">wθ</span>.<a href=\"./HopfieldNet/NN.html#Params.θ\">θ</a></span> <span class=\"fn\">u</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hactUp</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.Up\">NeuralNetwork.State.Up</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s</span> <span class=\"fn\">u</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L175-L178","name":"activ_old_neg_one","line":175,"kind":"theorem","docLink":"./HopfieldNet/HN/Core.html#activ_old_neg_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#activ_old_neg_one\"><span class=\"name\">activ_old_neg_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\">U</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.Up\">NeuralNetwork.State.Up</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s</span> <span class=\"fn\">u</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.net\">NeuralNetwork.State.net</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s</span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#θ'\">θ'</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">wθ</span>.<a href=\"./HopfieldNet/NN.html#Params.θ\">θ</a></span> <span class=\"fn\">u</span>)</span></span> → <span class=\"fn\">∀ (<span class=\"fn\">hnew</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.Up\">NeuralNetwork.State.Up</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s</span> <span class=\"fn\">u</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L171-L173","name":"actnew_one","line":171,"kind":"theorem","docLink":"./HopfieldNet/HN/Core.html#actnew_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#actnew_one\"><span class=\"name\">actnew_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\">U</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.net\">NeuralNetwork.State.net</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s</span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#θ'\">θ'</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">wθ</span>.<a href=\"./HopfieldNet/NN.html#Params.θ\">θ</a></span> <span class=\"fn\">u</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.Up\">NeuralNetwork.State.Up</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s</span> <span class=\"fn\">u</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L167-L169","name":"activ_old_one","line":167,"kind":"theorem","docLink":"./HopfieldNet/HN/Core.html#activ_old_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#activ_old_one\"><span class=\"name\">activ_old_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\">U</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hc</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.Up\">NeuralNetwork.State.Up</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s</span> <span class=\"fn\">u</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.net\">NeuralNetwork.State.net</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s</span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#θ'\">θ'</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">wθ</span>.<a href=\"./HopfieldNet/NN.html#Params.θ\">θ</a></span> <span class=\"fn\">u</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L163-L165","name":"act_new_neg_one_if_net_eq_th","line":163,"kind":"theorem","docLink":"./HopfieldNet/HN/Core.html#act_new_neg_one_if_net_eq_th","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#act_new_neg_one_if_net_eq_th\"><span class=\"name\">act_new_neg_one_if_net_eq_th</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\">U</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.net\">NeuralNetwork.State.net</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s</span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#θ'\">θ'</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">wθ</span>.<a href=\"./HopfieldNet/NN.html#Params.θ\">θ</a></span> <span class=\"fn\">u</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.Up\">NeuralNetwork.State.Up</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s</span> <span class=\"fn\">u</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L159-L161","name":"act_new_neg_one_if_not_net_lt_th","line":159,"kind":"theorem","docLink":"./HopfieldNet/HN/Core.html#act_new_neg_one_if_not_net_lt_th","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#act_new_neg_one_if_not_net_lt_th\"><span class=\"name\">act_new_neg_one_if_not_net_lt_th</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\">U</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.net\">NeuralNetwork.State.net</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s</span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#θ'\">θ'</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">wθ</span>.<a href=\"./HopfieldNet/NN.html#Params.θ\">θ</a></span> <span class=\"fn\">u</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.Up\">NeuralNetwork.State.Up</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s</span> <span class=\"fn\">u</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L155-L157","name":"actnew_neg_one_if_net_lt_th","line":155,"kind":"theorem","docLink":"./HopfieldNet/HN/Core.html#actnew_neg_one_if_net_lt_th","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#actnew_neg_one_if_net_lt_th\"><span class=\"name\">actnew_neg_one_if_net_lt_th</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\">U</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.net\">NeuralNetwork.State.net</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s</span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#θ'\">θ'</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">wθ</span>.<a href=\"./HopfieldNet/NN.html#Params.θ\">θ</a></span> <span class=\"fn\">u</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.Up\">NeuralNetwork.State.Up</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s</span> <span class=\"fn\">u</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L151-L153","name":"act_new_neg_one_if_net_lt_th","line":151,"kind":"theorem","docLink":"./HopfieldNet/HN/Core.html#act_new_neg_one_if_net_lt_th","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#act_new_neg_one_if_net_lt_th\"><span class=\"name\">act_new_neg_one_if_net_lt_th</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\">U</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hn</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.net\">NeuralNetwork.State.net</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s</span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#θ'\">θ'</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">wθ</span>.<a href=\"./HopfieldNet/NN.html#Params.θ\">θ</a></span> <span class=\"fn\">u</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.Up\">NeuralNetwork.State.Up</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s</span> <span class=\"fn\">u</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L147-L149","name":"act_of_non_up","line":147,"kind":"theorem","docLink":"./HopfieldNet/HN/Core.html#act_of_non_up","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#act_of_non_up\"><span class=\"name\">act_of_non_up</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">v2 </span><span class=\"fn\">u</span> : <span class=\"fn\">U</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">huv</span> : <span class=\"fn\">v2</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">u</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.Up\">NeuralNetwork.State.Up</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s</span> <span class=\"fn\">u</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v2</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L142-L145","name":"act_up_def","line":142,"kind":"theorem","docLink":"./HopfieldNet/HN/Core.html#act_up_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#act_up_def\"><span class=\"name\">act_up_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\">U</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.Up\">NeuralNetwork.State.Up</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s</span> <span class=\"fn\">u</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#ite\">if</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">wθ</span>.<a href=\"./HopfieldNet/NN.html#Params.θ\">θ</a></span> <span class=\"fn\">u</span>)</span>.<a href=\"./Init/Data/Vector/Basic.html#Vector.get\">get</a></span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.net\">NeuralNetwork.State.net</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s</span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#ite\">then</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#ite\">else</a> <span class=\"fn\">-<span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L107-L138","name":"Hebbian","line":107,"kind":"def","docLink":"./HopfieldNet/HN/Core.html#Hebbian","doc":"Defines the Hebbian learning rule for a Hopfield Network.\n\nGiven a set of patterns `ps`, this function returns the network parameters\nusing the Hebbian learning rule, which adjusts weights based on pattern correlations.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#Hebbian\"><span class=\"name\">Hebbian</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">ps</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">m</span></span> → <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L105-L105","name":"NeuralNetwork.State.act_one_or_neg_one","line":105,"kind":"theorem","docLink":"./HopfieldNet/HN/Core.html#NeuralNetwork.State.act_one_or_neg_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#NeuralNetwork.State.act_one_or_neg_one\"><span class=\"name\">NeuralNetwork</span>.<span class=\"name\">State</span>.<span class=\"name\">act_one_or_neg_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <span class=\"fn\">U</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L93-L101","name":"outerProduct","line":93,"kind":"def","docLink":"./HopfieldNet/HN/Core.html#outerProduct","doc":"Computes the outer product of two patterns in a Hopfield Network.\n\nReturns:\n- A matrix where each element `(i, j)` is the product of the\nactivations of `p1` at `i` and `p2` at `j`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#outerProduct\"><span class=\"name\">outerProduct</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">p1 </span><span class=\"fn\">p2</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Matrix/Defs.html#Matrix\">Matrix</a> <span class=\"fn\">U</span> <span class=\"fn\">U</span> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L88-L91","name":"θ'","line":88,"kind":"def","docLink":"./HopfieldNet/HN/Core.html#θ'","doc":"Extracts the first element from a vector of length 1.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#θ'\"><span class=\"name\">θ'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">u</span> : <span class=\"fn\">U</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Vector/Basic.html#Vector\">Vector</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.κ2\">κ2</a></span> <span class=\"fn\">u</span>)</span></span> → <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L42-L83","name":"HopfieldNetwork","line":42,"kind":"def","docLink":"./HopfieldNet/HN/Core.html#HopfieldNetwork","doc":"`HopfieldNetwork` is a type of neural network with parameters `R` and `U`.\n\n- `R`: A linear ordered field.\n- `U`: A finite, nonempty set of neurons with decidable equality.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\"><span class=\"name\">HopfieldNetwork</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork\">NeuralNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L37-L40","name":"HNfout","line":37,"kind":"def","docLink":"./HopfieldNet/HN/Core.html#HNfout","doc":"`HNfout` is an identity function that returns its input unchanged.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#HNfout\"><span class=\"name\">HNfout</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">act</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">R</span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L32-L35","name":"HNfact","line":32,"kind":"def","docLink":"./HopfieldNet/HN/Core.html#HNfact","doc":"`HNfact` returns `1` if `θ` is less than or equal to `input`, otherwise `-1`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#HNfact\"><span class=\"name\">HNfact</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">θ </span><span class=\"fn\">input</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">R</span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L22-L30","name":"HNfnet_eq","line":22,"kind":"theorem","docLink":"./HopfieldNet/HN/Core.html#HNfnet_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#HNfnet_eq\"><span class=\"name\">HNfnet_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <span class=\"fn\">U</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wu </span><span class=\"fn\">pred</span> : <span class=\"fn\"><span class=\"fn\">U</span> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hw</span> : <span class=\"fn\"><span class=\"fn\">wu</span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#HNfnet\">HNfnet</a> <span class=\"fn\">u</span> <span class=\"fn\">wu</span> <span class=\"fn\">pred</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∑ <span class=\"fn\">v</span> : <span class=\"fn\">U</span>, <span class=\"fn\"><span class=\"fn\">wu</span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">pred</span> <span class=\"fn\">v</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/HN/Core.lean#L17-L20","name":"HNfnet","line":17,"kind":"def","docLink":"./HopfieldNet/HN/Core.html#HNfnet","doc":"`HNfnet` computes the weighted sum of predictions for all elements in `U`, excluding `u`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/HN/Core.html#HNfnet\"><span class=\"name\">HNfnet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <span class=\"fn\">U</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wu </span><span class=\"fn\">pred</span> : <span class=\"fn\"><span class=\"fn\">U</span> → <span class=\"fn\">R</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">R</span></div></div>"}]}