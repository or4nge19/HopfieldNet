{"name":"HopfieldNet.DetailedBalance","instances":[],"imports":["Init","HopfieldNet.Stochastic","Mathlib.Analysis.Normed.Field.Instances","Mathlib.Data.ENNReal.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/DetailedBalance.lean#L573-L583","name":"gibbs_multi_site_transition","line":573,"kind":"theorem","docLink":"./HopfieldNet/DetailedBalance.html#gibbs_multi_site_transition","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/DetailedBalance.html#gibbs_multi_site_transition\"><span class=\"name\">gibbs_multi_site_transition</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv\">Inv</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s </span><span class=\"fn\">s'</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">∃ (<span class=\"fn\">u</span> : <span class=\"fn\">U</span>), <span class=\"fn\">∀ (<span class=\"fn\">v</span> : <span class=\"fn\">U</span>), <span class=\"fn\"><span class=\"fn\">v</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">u</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s'</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v</span></span></span></span></span>) → <span class=\"fn\"><a href=\"./HopfieldNet/Stochastic.html#gibbsTransitionProb\">gibbsTransitionProb</a> <span class=\"fn\">wθ</span> <span class=\"fn\">T</span> <span class=\"fn\">s</span> <span class=\"fn\">s'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/DetailedBalance.lean#L543-L570","name":"gibbsSamplingStep_prob_zero_if_multi_site","line":543,"kind":"theorem","docLink":"./HopfieldNet/DetailedBalance.html#gibbsSamplingStep_prob_zero_if_multi_site","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/DetailedBalance.html#gibbsSamplingStep_prob_zero_if_multi_site\"><span class=\"name\">gibbsSamplingStep_prob_zero_if_multi_site</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv\">Inv</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s </span><span class=\"fn\">s'</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">∃ (<span class=\"fn\">u</span> : <span class=\"fn\">U</span>), <span class=\"fn\">∀ (<span class=\"fn\">v</span> : <span class=\"fn\">U</span>), <span class=\"fn\"><span class=\"fn\">v</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">u</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s'</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v</span></span></span></span></span>) → <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/Stochastic.html#NN.State.gibbsSamplingStep\">NN.State.gibbsSamplingStep</a> <span class=\"fn\">wθ</span> <span class=\"fn\">T</span> <span class=\"fn\">s</span>)</span> <span class=\"fn\">s'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/DetailedBalance.lean#L530-L541","name":"gibbsUpdateSingleNeuron_prob_zero_if_not_update","line":530,"kind":"theorem","docLink":"./HopfieldNet/DetailedBalance.html#gibbsUpdateSingleNeuron_prob_zero_if_not_update","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/DetailedBalance.html#gibbsUpdateSingleNeuron_prob_zero_if_not_update\"><span class=\"name\">gibbsUpdateSingleNeuron_prob_zero_if_not_update</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <span class=\"fn\">U</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s'</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a>(<span class=\"fn\">s'</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./HopfieldNet/Stochastic.html#NN.State.updateNeuron\">NN.State.updateNeuron</a> <span class=\"fn\">s</span> <span class=\"fn\">u</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">s'</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./HopfieldNet/Stochastic.html#NN.State.updateNeuron\">NN.State.updateNeuron</a> <span class=\"fn\">s</span> <span class=\"fn\">u</span> <span class=\"fn\">(-<span class=\"fn\">1</span>)</span> <span class=\"fn\">⋯</span></span>) →\n  <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/Stochastic.html#NN.State.gibbsUpdateSingleNeuron\">NN.State.gibbsUpdateSingleNeuron</a> <span class=\"fn\">s</span> <span class=\"fn\">wθ</span> <span class=\"fn\">T</span> <span class=\"fn\">u</span>)</span> <span class=\"fn\">s'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/DetailedBalance.lean#L516-L528","name":"gibbsUpdateSingleNeuron_support","line":516,"kind":"theorem","docLink":"./HopfieldNet/DetailedBalance.html#gibbsUpdateSingleNeuron_support","doc":"Multi-site transitions have zero probability -"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/DetailedBalance.html#gibbsUpdateSingleNeuron_support\"><span class=\"name\">gibbsUpdateSingleNeuron_support</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <span class=\"fn\">U</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s'</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">s'</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/Stochastic.html#NN.State.gibbsUpdateSingleNeuron\">NN.State.gibbsUpdateSingleNeuron</a> <span class=\"fn\">s</span> <span class=\"fn\">wθ</span> <span class=\"fn\">T</span> <span class=\"fn\">u</span>)</span>.<a href=\"./Mathlib/Probability/ProbabilityMassFunction/Basic.html#PMF.support\">support</a></span> →\n  <span class=\"fn\">s'</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./HopfieldNet/Stochastic.html#NN.State.updateNeuron\">NN.State.updateNeuron</a> <span class=\"fn\">s</span> <span class=\"fn\">u</span> <span class=\"fn\">1</span> <span class=\"fn\">⋯</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">s'</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./HopfieldNet/Stochastic.html#NN.State.updateNeuron\">NN.State.updateNeuron</a> <span class=\"fn\">s</span> <span class=\"fn\">u</span> <span class=\"fn\">(-<span class=\"fn\">1</span>)</span> <span class=\"fn\">⋯</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/DetailedBalance.lean#L413-L514","name":"gibbs_single_site_transition_explicit","line":413,"kind":"theorem","docLink":"./HopfieldNet/DetailedBalance.html#gibbs_single_site_transition_explicit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/DetailedBalance.html#gibbs_single_site_transition_explicit\"><span class=\"name\">gibbs_single_site_transition_explicit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#HDiv\">HDiv</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s </span><span class=\"fn\">s'</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <span class=\"fn\">U</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_same_elsewhere</span> : <span class=\"fn\">∀ (<span class=\"fn\">v</span> : <span class=\"fn\">U</span>), <span class=\"fn\"><span class=\"fn\">v</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">u</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s'</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#θ'\">θ'</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">wθ</span>.<a href=\"./HopfieldNet/NN.html#Params.θ\">θ</a></span> <span class=\"fn\">u</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span> →\n  <span class=\"fn\"><span class=\"fn\">T</span> <a href=\"./Init/Prelude.html#GT.gt\">&gt;</a> <span class=\"fn\">0</span> →\n    <span class=\"fn\">∀ (<span class=\"fn\">h_neq</span> : <span class=\"fn\">s</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">s'</span>),\n      <span class=\"fn\"><a href=\"./HopfieldNet/Stochastic.html#gibbsTransitionProb\">gibbsTransitionProb</a> <span class=\"fn\">wθ</span> <span class=\"fn\">T</span> <span class=\"fn\">s</span> <span class=\"fn\">s'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>         <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">U</span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a>           <span class=\"fn\"><span class=\"fn\">(let <span class=\"fn\">local_field</span> := <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.net\">NeuralNetwork.State.net</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s</span> <span class=\"fn\">u</span></span>;\n            <span class=\"fn\">let <span class=\"fn\">Z</span> :=\n              <span class=\"fn\"><a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.ofReal\">ENNReal.ofReal</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> (<span class=\"fn\"><a href=\"./Init/Coe.html#Coe.coe\">Coe.coe</a> <span class=\"fn\">local_field</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">T</span>))</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a>                 <span class=\"fn\"><a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.ofReal\">ENNReal.ofReal</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><a href=\"./Init/Coe.html#Coe.coe\">Coe.coe</a> <span class=\"fn\">local_field</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">T</span>))</span></span>;\n            <a href=\"./Init/Prelude.html#ite\">if</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s'</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#ite\">then</a> <span class=\"fn\"><a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.ofReal\">ENNReal.ofReal</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> (<span class=\"fn\"><a href=\"./Init/Coe.html#Coe.coe\">Coe.coe</a> <span class=\"fn\">local_field</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">T</span>))</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">Z</span>\n            <a href=\"./Init/Prelude.html#ite\">else</a> <span class=\"fn\"><a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.ofReal\">ENNReal.ofReal</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><a href=\"./Init/Coe.html#Coe.coe\">Coe.coe</a> <span class=\"fn\">local_field</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">T</span>))</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">Z</span></span>)</span>.<a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.toReal\">toReal</a></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/DetailedBalance.lean#L402-L411","name":"gibbs_update_single_neuron_formula","line":402,"kind":"theorem","docLink":"./HopfieldNet/DetailedBalance.html#gibbs_update_single_neuron_formula","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/DetailedBalance.html#gibbs_update_single_neuron_formula\"><span class=\"name\">gibbs_update_single_neuron_formula</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <span class=\"fn\">U</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">val</span> : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">hval</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.pact\">pact</a></span> <span class=\"fn\">val</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">let <span class=\"fn\">local_field</span> := <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.net\">NeuralNetwork.State.net</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s</span> <span class=\"fn\">u</span></span>;\n<span class=\"fn\">let <span class=\"fn\">Z</span> := <span class=\"fn\"><a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.ofReal\">ENNReal.ofReal</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> (<span class=\"fn\"><a href=\"./Init/Coe.html#Coe.coe\">Coe.coe</a> <span class=\"fn\">local_field</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">T</span>))</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.ofReal\">ENNReal.ofReal</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><a href=\"./Init/Coe.html#Coe.coe\">Coe.coe</a> <span class=\"fn\">local_field</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">T</span>))</span></span>;\n<span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/Stochastic.html#NN.State.gibbsUpdateSingleNeuron\">NN.State.gibbsUpdateSingleNeuron</a> <span class=\"fn\">s</span> <span class=\"fn\">wθ</span> <span class=\"fn\">T</span> <span class=\"fn\">u</span>)</span> <span class=\"fn\">(<a href=\"./HopfieldNet/Stochastic.html#NN.State.updateNeuron\">NN.State.updateNeuron</a> <span class=\"fn\">s</span> <span class=\"fn\">u</span> <span class=\"fn\">val</span> <span class=\"fn\">hval</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <a href=\"./Init/Prelude.html#ite\">if</a> <span class=\"fn\">val</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#ite\">then</a> <span class=\"fn\"><a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.ofReal\">ENNReal.ofReal</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> (<span class=\"fn\"><a href=\"./Init/Coe.html#Coe.coe\">Coe.coe</a> <span class=\"fn\">local_field</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">T</span>))</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">Z</span>\n  <a href=\"./Init/Prelude.html#ite\">else</a> <span class=\"fn\"><a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.ofReal\">ENNReal.ofReal</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Complex/Exponential.html#Real.exp\">Real.exp</a> (<a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><a href=\"./Init/Coe.html#Coe.coe\">Coe.coe</a> <span class=\"fn\">local_field</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">T</span>))</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">Z</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/DetailedBalance.lean#L394-L400","name":"single_site_update_eq","line":394,"kind":"theorem","docLink":"./HopfieldNet/DetailedBalance.html#single_site_update_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/DetailedBalance.html#single_site_update_eq\"><span class=\"name\">single_site_update_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s </span><span class=\"fn\">s'</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <span class=\"fn\">U</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_same_elsewhere</span> : <span class=\"fn\">∀ (<span class=\"fn\">v</span> : <span class=\"fn\">U</span>), <span class=\"fn\"><span class=\"fn\">v</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">u</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s'</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_diff</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s'</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">s'</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./HopfieldNet/Stochastic.html#NN.State.updateNeuron\">NN.State.updateNeuron</a> <span class=\"fn\">s</span> <span class=\"fn\">u</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s'</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span>)</span> <span class=\"fn\">⋯</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/DetailedBalance.lean#L379-L392","name":"gibbs_transition_sum_single_site","line":379,"kind":"theorem","docLink":"./HopfieldNet/DetailedBalance.html#gibbs_transition_sum_single_site","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/DetailedBalance.html#gibbs_transition_sum_single_site\"><span class=\"name\">gibbs_transition_sum_single_site</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv\">Inv</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#HDiv\">HDiv</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s </span><span class=\"fn\">s'</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <span class=\"fn\">U</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_same_elsewhere</span> : <span class=\"fn\">∀ (<span class=\"fn\">v</span> : <span class=\"fn\">U</span>), <span class=\"fn\"><span class=\"fn\">v</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">u</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s'</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_diff</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s'</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/InfiniteSum/Defs.html#tsum\">∑'</a> (<span class=\"fn\">a</span> : <span class=\"fn\">U</span>)<a href=\"./Mathlib/Topology/Algebra/InfiniteSum/Defs.html#tsum\">,</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">U</span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/Stochastic.html#NN.State.gibbsUpdateSingleNeuron\">NN.State.gibbsUpdateSingleNeuron</a> <span class=\"fn\">s</span> <span class=\"fn\">wθ</span> <span class=\"fn\">T</span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">s'</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">U</span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/Stochastic.html#NN.State.gibbsUpdateSingleNeuron\">NN.State.gibbsUpdateSingleNeuron</a> <span class=\"fn\">s</span> <span class=\"fn\">wθ</span> <span class=\"fn\">T</span> <span class=\"fn\">u</span>)</span> <span class=\"fn\">s'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/DetailedBalance.lean#L365-L377","name":"ENNReal.natCast_eq_ofReal","line":365,"kind":"theorem","docLink":"./HopfieldNet/DetailedBalance.html#ENNReal.natCast_eq_ofReal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/DetailedBalance.html#ENNReal.natCast_eq_ofReal\"><span class=\"name\">ENNReal</span>.<span class=\"name\">natCast_eq_ofReal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↑<span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.ofReal\">ENNReal.ofReal</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/DetailedBalance.lean#L352-L363","name":"energy_single_site_diff","line":352,"kind":"theorem","docLink":"./HopfieldNet/DetailedBalance.html#energy_single_site_diff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/DetailedBalance.html#energy_single_site_diff\"><span class=\"name\">energy_single_site_diff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s </span><span class=\"fn\">s'</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <span class=\"fn\">U</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">v</span> : <span class=\"fn\">U</span>), <span class=\"fn\"><span class=\"fn\">v</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">u</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s'</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_bias</span> : <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#θ'\">θ'</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">wθ</span>.<a href=\"./HopfieldNet/NN.html#Params.θ\">θ</a></span> <span class=\"fn\">u</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#NeuralNetwork.State.E\">NeuralNetwork.State.E</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s'</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#NeuralNetwork.State.E\">NeuralNetwork.State.E</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Neg.neg\">-</a>(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s'</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span>) <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.net\">NeuralNetwork.State.net</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s</span> <span class=\"fn\">u</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/DetailedBalance.lean#L337-L350","name":"energy_single_site_diff_with_bias","line":337,"kind":"theorem","docLink":"./HopfieldNet/DetailedBalance.html#energy_single_site_diff_with_bias","doc":"Energy difference for single-site updates with specified bias term.\nThis is a general formulation that allows different bias configurations. -"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/DetailedBalance.html#energy_single_site_diff_with_bias\"><span class=\"name\">energy_single_site_diff_with_bias</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s </span><span class=\"fn\">s'</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <span class=\"fn\">U</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">v</span> : <span class=\"fn\">U</span>), <span class=\"fn\"><span class=\"fn\">v</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">u</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s'</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_bias</span> : <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#θ'\">θ'</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">wθ</span>.<a href=\"./HopfieldNet/NN.html#Params.θ\">θ</a></span> <span class=\"fn\">u</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">1</span> / <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.net\">NeuralNetwork.State.net</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s</span> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#NeuralNetwork.State.E\">NeuralNetwork.State.E</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s'</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#NeuralNetwork.State.E\">NeuralNetwork.State.E</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">-<span class=\"fn\">1</span></span> / <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s'</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span>) <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.net\">NeuralNetwork.State.net</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s</span> <span class=\"fn\">u</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/DetailedBalance.lean#L317-L335","name":"bias_energy_single_site_diff","line":317,"kind":"theorem","docLink":"./HopfieldNet/DetailedBalance.html#bias_energy_single_site_diff","doc":"When states differ at a single site, the energy difference in the bias component\nis proportional to the activation difference -"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/DetailedBalance.html#bias_energy_single_site_diff\"><span class=\"name\">bias_energy_single_site_diff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s </span><span class=\"fn\">s'</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <span class=\"fn\">U</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">v</span> : <span class=\"fn\">U</span>), <span class=\"fn\"><span class=\"fn\">v</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">u</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s'</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#NeuralNetwork.State.Eθ\">NeuralNetwork.State.Eθ</a> <span class=\"fn\">wθ</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#NeuralNetwork.State.Eθ\">NeuralNetwork.State.Eθ</a> <span class=\"fn\">wθ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#θ'\">θ'</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">wθ</span>.<a href=\"./HopfieldNet/NN.html#Params.θ\">θ</a></span> <span class=\"fn\">u</span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s'</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span>)</div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/DetailedBalance.lean#L299-L315","name":"weight_energy_single_site_diff","line":299,"kind":"theorem","docLink":"./HopfieldNet/DetailedBalance.html#weight_energy_single_site_diff","doc":"When states differ at a single site, the energy difference in the weight component\nis proportional to the local field and activation difference -"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/DetailedBalance.html#weight_energy_single_site_diff\"><span class=\"name\">weight_energy_single_site_diff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s </span><span class=\"fn\">s'</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <span class=\"fn\">U</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">v</span> : <span class=\"fn\">U</span>), <span class=\"fn\"><span class=\"fn\">v</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">u</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s'</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#NeuralNetwork.State.Ew\">NeuralNetwork.State.Ew</a> <span class=\"fn\">wθ</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><a href=\"./HopfieldNet/HN/Core.html#NeuralNetwork.State.Ew\">NeuralNetwork.State.Ew</a> <span class=\"fn\">wθ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s'</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span>) <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.net\">NeuralNetwork.State.net</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s</span> <span class=\"fn\">u</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/DetailedBalance.lean#L290-L297","name":"local_field_relation","line":290,"kind":"theorem","docLink":"./HopfieldNet/DetailedBalance.html#local_field_relation","doc":"For a Hopfield network with states differing at a single site, the activation\nat that site is related to the weighted sum of other activations -"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/DetailedBalance.html#local_field_relation\"><span class=\"name\">local_field_relation</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <span class=\"fn\">U</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.net\">NeuralNetwork.State.net</a> <span class=\"fn\">wθ</span> <span class=\"fn\">s</span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∑ <span class=\"fn\">v2</span> : <span class=\"fn\">U </span>with <span class=\"fn\">v2</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">u</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">wθ</span>.<a href=\"./HopfieldNet/NN.html#Params.w\">w</a></span> <span class=\"fn\">u</span> <span class=\"fn\">v2</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/DetailedBalance.lean#L229-L288","name":"weight_energy_sum_split","line":229,"kind":"theorem","docLink":"./HopfieldNet/DetailedBalance.html#weight_energy_sum_split","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/DetailedBalance.html#weight_energy_sum_split\"><span class=\"name\">weight_energy_sum_split</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s </span><span class=\"fn\">s'</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <span class=\"fn\">U</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">v</span> : <span class=\"fn\">U</span>), <span class=\"fn\"><span class=\"fn\">v</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">u</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s'</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_symm</span> : <span class=\"fn\">∀ (<span class=\"fn\">v1 </span><span class=\"fn\">v2</span> : <span class=\"fn\">U</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">wθ</span>.<a href=\"./HopfieldNet/NN.html#Params.w\">w</a></span> <span class=\"fn\">v1</span> <span class=\"fn\">v2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">wθ</span>.<a href=\"./HopfieldNet/NN.html#Params.w\">w</a></span> <span class=\"fn\">v2</span> <span class=\"fn\">v1</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∑ <span class=\"fn\">v1</span> : <span class=\"fn\">U</span>, <span class=\"fn\">∑ <span class=\"fn\">v2</span> : <span class=\"fn\">U </span>with <span class=\"fn\">v2</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">v1</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">wθ</span>.<a href=\"./HopfieldNet/NN.html#Params.w\">w</a></span> <span class=\"fn\">v1</span> <span class=\"fn\">v2</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s'</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v1</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s'</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v2</span></span></span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a>     <span class=\"fn\">∑ <span class=\"fn\">v1</span> : <span class=\"fn\">U</span>, <span class=\"fn\">∑ <span class=\"fn\">v2</span> : <span class=\"fn\">U </span>with <span class=\"fn\">v2</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">v1</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">wθ</span>.<a href=\"./HopfieldNet/NN.html#Params.w\">w</a></span> <span class=\"fn\">v1</span> <span class=\"fn\">v2</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v1</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v2</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   ((<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s'</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span>) <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">∑ <span class=\"fn\">v2</span> : <span class=\"fn\">U </span>with <span class=\"fn\">v2</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">u</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">wθ</span>.<a href=\"./HopfieldNet/NN.html#Params.w\">w</a></span> <span class=\"fn\">u</span> <span class=\"fn\">v2</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v2</span></span></span>) <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">2</span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/DetailedBalance.lean#L217-L227","name":"weight_sum_symmetry","line":217,"kind":"theorem","docLink":"./HopfieldNet/DetailedBalance.html#weight_sum_symmetry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/DetailedBalance.html#weight_sum_symmetry\"><span class=\"name\">weight_sum_symmetry</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <span class=\"fn\">U</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_symm</span> : <span class=\"fn\">∀ (<span class=\"fn\">v1 </span><span class=\"fn\">v2</span> : <span class=\"fn\">U</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">wθ</span>.<a href=\"./HopfieldNet/NN.html#Params.w\">w</a></span> <span class=\"fn\">v1</span> <span class=\"fn\">v2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">wθ</span>.<a href=\"./HopfieldNet/NN.html#Params.w\">w</a></span> <span class=\"fn\">v2</span> <span class=\"fn\">v1</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∑ <span class=\"fn\">v1</span> : <span class=\"fn\">U </span>with <span class=\"fn\">v1</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">u</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">wθ</span>.<a href=\"./HopfieldNet/NN.html#Params.w\">w</a></span> <span class=\"fn\">v1</span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v1</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∑ <span class=\"fn\">v2</span> : <span class=\"fn\">U </span>with <span class=\"fn\">v2</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">u</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">wθ</span>.<a href=\"./HopfieldNet/NN.html#Params.w\">w</a></span> <span class=\"fn\">u</span> <span class=\"fn\">v2</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/DetailedBalance.lean#L178-L215","name":"weight_energy_diff_term_v1_ne_u","line":178,"kind":"theorem","docLink":"./HopfieldNet/DetailedBalance.html#weight_energy_diff_term_v1_ne_u","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/DetailedBalance.html#weight_energy_diff_term_v1_ne_u\"><span class=\"name\">weight_energy_diff_term_v1_ne_u</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s </span><span class=\"fn\">s'</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <span class=\"fn\">U</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">v</span> : <span class=\"fn\">U</span>), <span class=\"fn\"><span class=\"fn\">v</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">u</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s'</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∑ <span class=\"fn\">v1</span> : <span class=\"fn\">U </span>with <span class=\"fn\">v1</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">u</span>, <span class=\"fn\">∑ <span class=\"fn\">v2</span> : <span class=\"fn\">U </span>with <span class=\"fn\">v2</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">v1</span>, (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">wθ</span>.<a href=\"./HopfieldNet/NN.html#Params.w\">w</a></span> <span class=\"fn\">v1</span> <span class=\"fn\">v2</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s'</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v1</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s'</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v2</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">wθ</span>.<a href=\"./HopfieldNet/NN.html#Params.w\">w</a></span> <span class=\"fn\">v1</span> <span class=\"fn\">v2</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v1</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v2</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s'</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span>) <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">∑ <span class=\"fn\">v1</span> : <span class=\"fn\">U </span>with <span class=\"fn\">v1</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">u</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">wθ</span>.<a href=\"./HopfieldNet/NN.html#Params.w\">w</a></span> <span class=\"fn\">v1</span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/DetailedBalance.lean#L154-L176","name":"weight_energy_diff_term_v1_eq_u","line":154,"kind":"theorem","docLink":"./HopfieldNet/DetailedBalance.html#weight_energy_diff_term_v1_eq_u","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/DetailedBalance.html#weight_energy_diff_term_v1_eq_u\"><span class=\"name\">weight_energy_diff_term_v1_eq_u</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s </span><span class=\"fn\">s'</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <span class=\"fn\">U</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">v</span> : <span class=\"fn\">U</span>), <span class=\"fn\"><span class=\"fn\">v</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">u</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s'</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∑ <span class=\"fn\">v2</span> : <span class=\"fn\">U </span>with <span class=\"fn\">v2</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">u</span>, (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">wθ</span>.<a href=\"./HopfieldNet/NN.html#Params.w\">w</a></span> <span class=\"fn\">u</span> <span class=\"fn\">v2</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s'</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s'</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v2</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">wθ</span>.<a href=\"./HopfieldNet/NN.html#Params.w\">w</a></span> <span class=\"fn\">u</span> <span class=\"fn\">v2</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v2</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s'</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span>) <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">∑ <span class=\"fn\">v2</span> : <span class=\"fn\">U </span>with <span class=\"fn\">v2</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">u</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">wθ</span>.<a href=\"./HopfieldNet/NN.html#Params.w\">w</a></span> <span class=\"fn\">u</span> <span class=\"fn\">v2</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/DetailedBalance.lean#L122-L152","name":"energy_terms_with_u_diff","line":122,"kind":"theorem","docLink":"./HopfieldNet/DetailedBalance.html#energy_terms_with_u_diff","doc":"The energy difference for terms involving site u when states differ only at u -"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/DetailedBalance.html#energy_terms_with_u_diff\"><span class=\"name\">energy_terms_with_u_diff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s </span><span class=\"fn\">s'</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <span class=\"fn\">U</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">v</span> : <span class=\"fn\">U</span>), <span class=\"fn\"><span class=\"fn\">v</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">u</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s'</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∑ <span class=\"fn\">v2</span> : <span class=\"fn\">U </span>with <span class=\"fn\">v2</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">u</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">wθ</span>.<a href=\"./HopfieldNet/NN.html#Params.w\">w</a></span> <span class=\"fn\">u</span> <span class=\"fn\">v2</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s'</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s'</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v2</span></span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">∑ <span class=\"fn\">v2</span> : <span class=\"fn\">U </span>with <span class=\"fn\">v2</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">u</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">wθ</span>.<a href=\"./HopfieldNet/NN.html#Params.w\">w</a></span> <span class=\"fn\">u</span> <span class=\"fn\">v2</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v2</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s'</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span>) <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">∑ <span class=\"fn\">v2</span> : <span class=\"fn\">U </span>with <span class=\"fn\">v2</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">u</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">wθ</span>.<a href=\"./HopfieldNet/NN.html#Params.w\">w</a></span> <span class=\"fn\">u</span> <span class=\"fn\">v2</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/DetailedBalance.lean#L104-L120","name":"energy_terms_without_u_equal","line":104,"kind":"theorem","docLink":"./HopfieldNet/DetailedBalance.html#energy_terms_without_u_equal","doc":"When states differ only at site u, the energy terms that involve pairs of sites other than u are equal -"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/DetailedBalance.html#energy_terms_without_u_equal\"><span class=\"name\">energy_terms_without_u_equal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s </span><span class=\"fn\">s'</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <span class=\"fn\">U</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">∀ (<span class=\"fn\">v</span> : <span class=\"fn\">U</span>), <span class=\"fn\"><span class=\"fn\">v</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">u</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s'</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∑ <span class=\"fn\">v1</span> ∈ <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Finset.univ\">Finset.univ</a>.<a href=\"./Mathlib/Data/Finset/Erase.html#Finset.erase\">erase</a></span> <span class=\"fn\">u</span></span>, <span class=\"fn\">∑ <span class=\"fn\">v2</span> : <span class=\"fn\">U </span>with <span class=\"fn\">v2</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">v1</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">v2</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">u</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">wθ</span>.<a href=\"./HopfieldNet/NN.html#Params.w\">w</a></span> <span class=\"fn\">v1</span> <span class=\"fn\">v2</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s'</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v1</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s'</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v2</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">∑ <span class=\"fn\">v1</span> ∈ <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Finset.univ\">Finset.univ</a>.<a href=\"./Mathlib/Data/Finset/Erase.html#Finset.erase\">erase</a></span> <span class=\"fn\">u</span></span>, <span class=\"fn\">∑ <span class=\"fn\">v2</span> : <span class=\"fn\">U </span>with <span class=\"fn\">v2</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">v1</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">v2</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">u</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">wθ</span>.<a href=\"./HopfieldNet/NN.html#Params.w\">w</a></span> <span class=\"fn\">v1</span> <span class=\"fn\">v2</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v1</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v2</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/DetailedBalance.lean#L84-L102","name":"gibbs_single_site_transition_prob","line":84,"kind":"theorem","docLink":"./HopfieldNet/DetailedBalance.html#gibbs_single_site_transition_prob","doc":"Main lemma for Gibbs transition probability with single site update :\nFor a state transition involving change at exactly one site u, the Gibbs transition\nprobability is the product of the probability of selecting u and the probability\nof updating u to the new value -"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/DetailedBalance.html#gibbs_single_site_transition_prob\"><span class=\"name\">gibbs_single_site_transition_prob</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#HDiv\">HDiv</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv\">Inv</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s </span><span class=\"fn\">s'</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <span class=\"fn\">U</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_diff_at_u</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s'</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_same_elsewhere</span> : <span class=\"fn\">∀ (<span class=\"fn\">v</span> : <span class=\"fn\">U</span>), <span class=\"fn\"><span class=\"fn\">v</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">u</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s'</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./HopfieldNet/Stochastic.html#gibbsTransitionProb\">gibbsTransitionProb</a> <span class=\"fn\">wθ</span> <span class=\"fn\">T</span> <span class=\"fn\">s</span> <span class=\"fn\">s'</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">(<span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">U</span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/Stochastic.html#NN.State.gibbsUpdateSingleNeuron\">NN.State.gibbsUpdateSingleNeuron</a> <span class=\"fn\">s</span> <span class=\"fn\">wθ</span> <span class=\"fn\">T</span> <span class=\"fn\">u</span>)</span> <span class=\"fn\">(<a href=\"./HopfieldNet/Stochastic.html#NN.State.updateNeuron\">NN.State.updateNeuron</a> <span class=\"fn\">s</span> <span class=\"fn\">u</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s'</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span>)</span> <span class=\"fn\">⋯</span>)</span></span>).<a href=\"./Mathlib/Data/ENNReal/Basic.html#ENNReal.toReal\">toReal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/DetailedBalance.lean#L33-L82","name":"gibbs_single_site_tsum","line":33,"kind":"theorem","docLink":"./HopfieldNet/DetailedBalance.html#gibbs_single_site_tsum","doc":"In a tsum over all neurons, only the neuron where s and s' differ contributes -"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/DetailedBalance.html#gibbs_single_site_tsum\"><span class=\"name\">gibbs_single_site_tsum</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">R </span><span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Defs/LinearOrder.html#LinearOrder\">LinearOrder</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/Ring/Defs.html#IsStrictOrderedRing\">IsStrictOrderedRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#HDiv\">HDiv</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Notation/Defs.html#Inv\">Inv</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">wθ</span> : <span class=\"fn\"><a href=\"./HopfieldNet/NN.html#Params\">Params</a> <span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">T</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">s </span><span class=\"fn\">s'</span> : <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/HN/Core.html#HopfieldNetwork\">HopfieldNetwork</a> <span class=\"fn\">R</span> <span class=\"fn\">U</span>)</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State\">State</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">u</span> : <span class=\"fn\">U</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_diff_at_u</span> : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s'</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h_same_elsewhere</span> : <span class=\"fn\">∀ (<span class=\"fn\">v</span> : <span class=\"fn\">U</span>), <span class=\"fn\"><span class=\"fn\">v</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">u</span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s'</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">v</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/InfiniteSum/Defs.html#tsum\">∑'</a> (<span class=\"fn\">a</span> : <span class=\"fn\">U</span>)<a href=\"./Mathlib/Topology/Algebra/InfiniteSum/Defs.html#tsum\">,</a>     <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Probability/ProbabilityMassFunction/Constructions.html#PMF.ofFintype\">PMF.ofFintype</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">U</span>) =&gt; <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">U</span>)</span></span>)</span> <span class=\"fn\">⋯</span>)</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/Stochastic.html#NN.State.gibbsUpdateSingleNeuron\">NN.State.gibbsUpdateSingleNeuron</a> <span class=\"fn\">s</span> <span class=\"fn\">wθ</span> <span class=\"fn\">T</span> <span class=\"fn\">a</span>)</span> <span class=\"fn\">s'</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">U</span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./HopfieldNet/Stochastic.html#NN.State.gibbsUpdateSingleNeuron\">NN.State.gibbsUpdateSingleNeuron</a> <span class=\"fn\">s</span> <span class=\"fn\">wθ</span> <span class=\"fn\">T</span> <span class=\"fn\">u</span>)</span> <span class=\"fn\">(<a href=\"./HopfieldNet/Stochastic.html#NN.State.updateNeuron\">NN.State.updateNeuron</a> <span class=\"fn\">s</span> <span class=\"fn\">u</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s'</span>.<a href=\"./HopfieldNet/NN.html#NeuralNetwork.State.act\">act</a></span> <span class=\"fn\">u</span>)</span> <span class=\"fn\">⋯</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/DetailedBalance.lean#L29-L31","name":"mul_div_cancel_of_ne_zero","line":29,"kind":"theorem","docLink":"./HopfieldNet/DetailedBalance.html#mul_div_cancel_of_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/DetailedBalance.html#mul_div_cancel_of_ne_zero\"><span class=\"name\">mul_div_cancel_of_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">α</span> : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(<span class=\"fn\">h</span> : <span class=\"fn\">b</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></div></div>"},{"info":{"sourceLink":"https://github.com/mkaratarakis/HopfieldNet/blob/d669253cbe19c6ce4cd103939fa32fb81c26d54b/HopfieldNet/DetailedBalance.lean#L8-L27","name":"sum_univ_eq_tsum_uniform","line":8,"kind":"theorem","docLink":"./HopfieldNet/DetailedBalance.html#sum_univ_eq_tsum_uniform","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./HopfieldNet/DetailedBalance.html#sum_univ_eq_tsum_uniform\"><span class=\"name\">sum_univ_eq_tsum_uniform</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{<span class=\"fn\">U</span> : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Defs.html#Fintype\">Fintype</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">U</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Algebra/InfiniteSum/Defs.html#Summable\">Summable</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">U</span>) =&gt; <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">U</span>)</span></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/InfiniteSum/Defs.html#tsum\">∑'</a> (<span class=\"fn\">x</span> : <span class=\"fn\">U</span>)<a href=\"./Mathlib/Topology/Algebra/InfiniteSum/Defs.html#tsum\">,</a> <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">U</span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∑ <span class=\"fn\">x</span> : <span class=\"fn\">U</span>, <span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">U</span>)</span></span></span></div></div>"}]}